<Window x:Class="AnnoMapEditor.UI.Windows.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:AnnoMapEditor.UI.Controls"
        xmlns:islandProperties="clr-namespace:AnnoMapEditor.UI.Controls.IslandProperties"
        xmlns:validation="clr-namespace:AnnoMapEditor.UI.Controls.MapTemplates"
        xmlns:converters="clr-namespace:AnnoMapEditor.UI.Converters"
        xmlns:overlays="clr-namespace:AnnoMapEditor.UI.Overlays"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:draw="clr-namespace:System.Drawing;assembly=System.Drawing"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="AnnoMapEditor"
        lex:ResxLocalizationProvider.DefaultDictionary="Texts"
        xmlns:local="clr-namespace:AnnoMapEditor.UI.Windows.Main"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
        mc:Ignorable="d"
        Name="mainWindow"
        Title="MainWindow" Height="900" Width="1440"
        WindowStyle="SingleBorderWindow"
        Background="{StaticResource BackgroundBrush}" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/Styles.xaml" />
                <ResourceDictionary>
                    <converters:BoolToStyle x:Key="isActiveToToolbarButtonStyle" OnFalse="{StaticResource ToolbarButton}" OnTrue="{StaticResource ToolbarButtonActive}"/>
                    <converters:BoolToStyle x:Key="isActiveToWindowFrameStyle" OnFalse="{StaticResource InactiveWindowBorder}" OnTrue="{StaticResource ActiveWindowBorder}"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome
            GlassFrameThickness="0"
            CornerRadius="0"
            CaptionHeight="60"
            UseAeroCaptionButtons="False"
            ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Grid Name="mainWindowGrid" ClipToBounds="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Grid.RowSpan="3" Style="{Binding ElementName=mainWindow, Path=IsActive, Converter={StaticResource isActiveToWindowFrameStyle}}"/>
        
        <!-- Title Bar -->
        <Grid Height="auto" RenderOptions.EdgeMode="Aliased" Background="{StaticResource DarkBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Image Name="titleIcon" VerticalAlignment="Center" Height="24" Margin="12,0" Source="/Assets/app.ico"/>
            <TextBlock Name="titleText" Grid.Column="1" VerticalAlignment="Center" Margin="0" Foreground="#f0f0f0" FontSize="14" FontWeight="UltraLight"/>
            <!--<StackPanel Grid.Column="2" Orientation="Horizontal" Margin="30,0" VerticalAlignment="Center">
            </StackPanel>-->
            <Button Name="minimizeButton" Grid.Column="3" Content="&#xe921;" Style="{StaticResource WindowControlDefault}" Click="minimizeBtn_Click"/>
            <Button Name="maximizeButton" Grid.Column="4" Content="&#xe922;" Style="{StaticResource WindowControlDefault}" Click="maximizeBtn_Click"/>
            <Button Name="closeButton" Grid.Column="5" Content="&#xe8bb;" Style="{StaticResource WindowControlRed}" Click="CloseBtn_Click"/>
        </Grid>

        <Border Grid.Row="1" Background="{StaticResource DarkBackgroundBrush}" RenderOptions.EdgeMode="Aliased"/>
        <StackPanel Grid.Row="1" HorizontalAlignment="Left" Name="toolbarStackPanel" Orientation="Horizontal" Background="{StaticResource DarkBackgroundBrush}">
            <Button IsEnabled="False" Margin="10,0,0,0" Style="{StaticResource ToolbarButton}" Content="&#xe7a7;"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe7a6;"/>
            <Border Width="8" Margin="0,4,7,4" BorderThickness =" 0,0,1,0" BorderBrush="#505050"/>
            <Button IsEnabled="True" Style="{StaticResource ToolbarButton}" Content="&#xe8a5;" Click="NewFile_Click" ToolTip="New map template"/>
            <Button IsEnabled="True" Style="{StaticResource ToolbarButton}" Content="&#xe838;" Click="OpenFile_Click" ToolTip="Load map template file"/>
            <Button IsEnabled="True" Style="{StaticResource ToolbarButton}" Content="&#xe896;" Click="ImportMap_Click" ToolTip="Import map template from game">
                <Button.ContextMenu>
                    <ContextMenu Name="toolbarImportContextMenu"/>
                </Button.ContextMenu>
            </Button>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe74e;"/>
            <Button IsEnabled="True" Style="{StaticResource ToolbarButton}" Content="&#xe792;" Click="ExportMap_Click" ToolTip="Save as"/>
            <Button IsEnabled="True" Style="{StaticResource ToolbarButton}" Content="&#xe898;" Click="ExportMod_Click" ToolTip="Export as Mod"/>
            <Border Width="8" Margin="0,4,7,4" BorderThickness =" 0,0,1,0" BorderBrush="#505050"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe710;"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe74d;"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe8c8;"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe77f;"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe8c6;"/>
            <Border Width="8" Margin="0,4,7,4" BorderThickness =" 0,0,1,0" BorderBrush="#505050"/>
            <Button IsEnabled="True" Style="{StaticResource ToolbarButton}" Content="&#xe73f;" Click="ResetZoom_Click" ToolTip="Reset map zoom"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe8a3;"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe71f;"/>
            <Button IsEnabled="True" Style="{Binding MapTemplate.ShowLabels, Converter={StaticResource isActiveToToolbarButtonStyle}}" Content="&#xe8ec;" Click="ShowLabels_Click" ToolTip="Show island labels"/>
            <Border Width="8" Margin="0,4,7,4" BorderThickness =" 0,0,1,0" BorderBrush="#505050"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe897;"/>
            <Button IsEnabled="False" Style="{StaticResource ToolbarButton}" Content="&#xe713;"/>
        </StackPanel>

        <!-- Content Grid -->
        <Grid Grid.Row="2" VerticalAlignment="Stretch">
            <Grid.Resources>
                <converters:VisibilityToBool x:Key="FalseOnVisible" OnVisible="False" />
                <converters:BoolToVisibility x:Key="collapseOnFalse" />
                <converters:BooleaNotConverter x:Key="booleanNot" />
            </Grid.Resources>

            <!-- layout -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftSidebar" MaxWidth="300" />
                <ColumnDefinition />
                <ColumnDefinition x:Name="RightSidebar" MaxWidth="300" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>

            <!-- map view -->
            <controls:MapView
                x:Name="Map"
                Grid.Column="1"
                SelectedIsland="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SelectedIsland, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                EditPlayableArea="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.MapTemplateProperties.EditPlayableArea, Mode=OneWay}"
                ShowPlayableAreaMargins="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.MapTemplateProperties.ShowPlayableAreaMargins, Mode=OneWay}"
                DataContext="{Binding MapTemplate, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />

            <!-- MapTemplate properties -->
            <Border Grid.Column="0" Background="{StaticResource DarkBackgroundBrush}" RenderOptions.EdgeMode="Aliased"></Border>
            <StackPanel Grid.Column="0">
                <TextBlock
                    Margin="16,16,16,0"
                    Style="{StaticResource HeaderLabelStyle}"
                    HorizontalAlignment="Left"
                    Text="{lex:Loc Key=Session}"/>
                
                <!--<StackPanel Margin="16,0" VerticalAlignment="Top" Orientation="Horizontal">
                    <controls:DropDownButton HorizontalAlignment="Left">
                        <ContentControl Content="{lex:Loc Key=OpenFile}" />
                        <controls:DropDownButton.Menu>
                            <ContextMenu Name="openMapMenu" />
                        </controls:DropDownButton.Menu>
                    </controls:DropDownButton>
                    <controls:DropDownButton HorizontalAlignment="Left"
                                         IsEnabled="{Binding MapTemplateChecker.HasErrors, Converter={StaticResource booleanNot}}">
                        <ContentControl Content="Save" />
                        <controls:DropDownButton.Menu>
                            <ContextMenu>
                                <MenuItem Header="{lex:Loc Key=SaveAsMapTemplate}" Click="ExportMap_Click"/>
                                <MenuItem Header="{lex:Loc {Binding Path=ExportStatus.TextStatus, UpdateSourceTrigger=PropertyChanged, Converter={lex:PrependTypeConverter}}}" Click="ExportMod_Click"/>
                            </ContextMenu>
                        </controls:DropDownButton.Menu>
                    </controls:DropDownButton>
                </StackPanel>-->

                <controls:MapTemplateProperties
                    Margin="16"
                    DataContext="{Binding MapTemplateProperties}"
                    HorizontalAlignment="Stretch" />

                <!-- validation warnings -->
                <validation:ValidationResultList DataContext="{Binding MapTemplateChecker}"/>
            </StackPanel>

            <!-- island properties -->
            <Border Grid.Column="2" Background="{StaticResource DarkBackgroundBrush}" RenderOptions.EdgeMode="Aliased"></Border>
            <StackPanel Grid.Column="2">
                <islandProperties:RandomIslandProperties DataContext="{Binding SelectedRandomIslandPropertiesViewModel, UpdateSourceTrigger=PropertyChanged}" />
                <islandProperties:FixedIslandProperties DataContext="{Binding SelectedFixedIslandPropertiesViewModel, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
            
            <controls:Imprint Grid.Column="2"
                          VerticalAlignment="Bottom"/>

            <!-- Overlays -->
            <overlays:OverlayContainer Grid.ColumnSpan="3" />
        </Grid>

    </Grid>
</Window>
