<Window x:Class="AnnoMapEditor.UI.Windows.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:AnnoMapEditor.UI.Controls"
        xmlns:islandProperties="clr-namespace:AnnoMapEditor.UI.Controls.IslandProperties"
        xmlns:validation="clr-namespace:AnnoMapEditor.UI.Controls.MapTemplates"
        xmlns:converters="clr-namespace:AnnoMapEditor.UI.Converters"
        xmlns:overlays="clr-namespace:AnnoMapEditor.UI.Overlays"
        xmlns:local="clr-namespace:AnnoMapEditor.UI.Windows.Main"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="900" Width="1440"
        Background="{StaticResource BackgroundBrush}">
    <Window.Resources>
        <ResourceDictionary Source="../../Resources/Styles.xaml" />
    </Window.Resources>
    <Grid VerticalAlignment="Stretch">
        
        <Grid.Resources>
            <converters:VisibilityToBool x:Key="FalseOnVisible" OnVisible="False" />
            <converters:BoolToVisibility x:Key="collapseOnFalse" />
            <converters:BooleaNotConverter x:Key="booleanNot" />
        </Grid.Resources>
        
        <!-- layout -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="LeftSidebar" MaxWidth="300" />
            <ColumnDefinition />
            <ColumnDefinition x:Name="RightSidebar" MaxWidth="300" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition x:Name="Footer" Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- map view -->
        <controls:MapView
                x:Name="Map"
                Grid.Column="1"
                Grid.Row="0"
                SelectedIsland="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SelectedIsland, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                EditPlayableArea="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.MapTemplateProperties.EditPlayableArea, Mode=OneWay}"
                ShowPlayableAreaMargins="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.MapTemplateProperties.ShowPlayableAreaMargins, Mode=OneWay}"
                DataContext="{Binding MapTemplate, Mode=OneWay}" />
        
        <!-- MapTemplate properties -->
        <StackPanel Grid.Column="0"
                    Grid.Row="0"
                    Margin="16">
            <TextBlock
                    Style="{StaticResource HeaderLabelStyle}"
                    HorizontalAlignment="Left"
                    Text="Session"/>
            <StackPanel Margin="0,0,0,4" VerticalAlignment="Top" Orientation="Horizontal">
                <controls:DropDownButton HorizontalAlignment="Left">
                    <ContentControl Content="Open" />
                    <controls:DropDownButton.Menu>
                        <ContextMenu Name="openMapMenu" />
                    </controls:DropDownButton.Menu>
                </controls:DropDownButton>
                <controls:DropDownButton HorizontalAlignment="Left"
                                         IsEnabled="{Binding MapTemplateChecker.HasErrors, Converter={StaticResource booleanNot}}">
                    <ContentControl Content="Save" />
                    <controls:DropDownButton.Menu>
                        <ContextMenu>
                            <MenuItem Header="As map template" Click="ExportMap_Click"/>
                            <MenuItem Header="As playable mod" Click="ExportMod_Click"/>
                        </ContextMenu>
                    </controls:DropDownButton.Menu>
                </controls:DropDownButton>
            </StackPanel>
            
            <controls:MapTemplateProperties
                    DataContext="{Binding MapTemplateProperties}"
                    HorizontalAlignment="Left" />

            <!-- validation warnings -->
            <validation:ValidationResultList DataContext="{Binding MapTemplateChecker}"/>
        </StackPanel>

        <!-- island properties -->
        <StackPanel Grid.Column="2"
                    Grid.Row="0">
            <islandProperties:RandomIslandProperties DataContext="{Binding SelectedRandomIslandPropertiesViewModel, UpdateSourceTrigger=PropertyChanged}" />
            <islandProperties:FixedIslandProperties DataContext="{Binding SelectedFixedIslandPropertiesViewModel, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>

        <!-- footer -->
        <StackPanel Grid.Column="0" 
                    Grid.Row="1"
                    Orientation="Horizontal"
                    VerticalAlignment="Bottom" 
                    Margin="8,0,0,0">
            <emoji:TextBlock Text="{Binding GamePathStatus.Status, UpdateSourceTrigger=PropertyChanged}"
                                 ToolTip="{Binding GamePathStatus.ToolTip, UpdateSourceTrigger=PropertyChanged}" />
            <Button Click="Configure_Click" HorizontalAlignment="Left"
                        Visibility="{Binding GamePathStatus.Configure, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock Text="{Binding GamePathStatus.ConfigureText, UpdateSourceTrigger=PropertyChanged}"/>
            </Button>
            <Button Click="AutoDetect_Click" HorizontalAlignment="Left"
                        Visibility="{Binding GamePathStatus.AutoDetect, UpdateSourceTrigger=PropertyChanged}">Auto detect</Button>
        </StackPanel>
        <controls:Imprint Grid.Row="1" Grid.Column="2" />

        <!-- Overlays -->
        <overlays:OverlayContainer Grid.ColumnSpan="3"
                                   Grid.RowSpan="2" />
    </Grid>
</Window>
