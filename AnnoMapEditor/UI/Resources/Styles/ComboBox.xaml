<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AnnoMapEditor.UI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- The Button of a collapsed Combo Box -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="BaseBackground" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" CornerRadius="5" />
            <Border x:Name="LeftBorder" 
                    BorderThickness="1,1,0,1" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="Transparent" 
                    CornerRadius="5,0,0, 5"/>
            <Border x:Name="RightBorder" Grid.Column="1"
                    Background="{TemplateBinding BorderBrush}"
                    CornerRadius="0,5,5, 0"/>
            <Path x:Name="Arrow" Grid.Column="1" 
                  VerticalAlignment="Center" HorizontalAlignment="Center"
                  Width="6" Fill="#f0f0f0" Stretch="Uniform" 
                  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "/>
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="BaseBackground" Property="CornerRadius" Value="5, 5, 0, 0"/>
                <Setter TargetName="LeftBorder" Property="CornerRadius" Value="5, 0, 0, 0"/>
                <Setter TargetName="RightBorder" Property="CornerRadius" Value="0, 5, 0, 0"/>
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <!--<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="Black" />
    </ControlTemplate>-->

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!-- The Style for each item in the list -->
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="0" 
                                        CornerRadius="5"
                                        Margin="0,1"
                                        Padding="10,5">
                                    <ContentPresenter TextBlock.Foreground="{StaticResource ForegroundBrush}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected"  Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SelectedBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource SelectedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource MouseoverBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource MouseoverBackgroundBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <!-- The actual ComboBox control template -->
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Background="{StaticResource ControlBrush}"
                                      BorderBrush="Transparent"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Focusable="false"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            TextBlock.Foreground="{StaticResource ForegroundBrush}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            Margin="8,6,28,6"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <Popup x:Name="Popup"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Focusable="False">
                            <Grid MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  Background="{StaticResource MediumBackgroundBrush}"
                                  Margin="0,2,0,0">
                                <Border x:Name="DropDown"
                                        SnapsToDevicePixels="True"
                                        VerticalAlignment="Stretch"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource BrightBorderBrush}"/>
                                <ScrollViewer Margin="4,4,4,4">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDown" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="ToggleButton" Value="{StaticResource MouseoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True" >
                            <Setter Property="BorderBrush" TargetName="ToggleButton" Value="{StaticResource SelectedForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>